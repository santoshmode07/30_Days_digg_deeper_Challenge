class Solution {
public:
    void helper(int index,int target,vector<int>&ds,vector<vector<int>>&store,vector<int>&input){
        if(target==0){
            store.push_back(ds);
            return;
        }
        for(int i=index;i<input.size();i++){
            if(input[i]>target)break;
            if(i>index&&input[i]==input[i-1]) continue;
            ds.push_back(input[i]);
            helper(i+1,target-input[i],ds,store,input);
            ds.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<int>ds;
        vector<vector<int>>store;
        helper(0,target,ds,store,candidates);
        return store;
    }
};