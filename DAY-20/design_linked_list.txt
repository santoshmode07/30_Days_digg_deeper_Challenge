struct Node {
    int val;
    Node* next;
    Node(int x) : val(x),next(nullptr) {}
};
class MyLinkedList {
public:
    Node* head;
    Node* tail;
    int size;
    MyLinkedList() {
        head=nullptr;
        tail=nullptr;
        size=0;
    }
    
    int get(int index) {
        if (index < 0 || index >= size) return -1;
        Node* curr = head;
        for(int i=0;i<index;i++) curr=curr->next;
        return curr->val;
    }
    
    void addAtHead(int val) {
        Node* node=new Node(val);
        if(head==nullptr){
            head=tail=node;
        }
        else{
            node->next=head;
            head=node;
        }
        size++;
    }
    
    void addAtTail(int val) {
        Node* node=new Node(val);
        if(tail==nullptr){
            head=tail=node;
        }
        else{
            tail->next=node;
            tail=node;
        }
        size++;
    }
    
    void addAtIndex(int index, int val) {
        if (index < 0 || index > size) return;
        if(index==0) {
            addAtHead(val);
            return;
        }
        else if(index==size){
            addAtTail(val);
            return;
        }
        else{
            Node*node=new Node(val);
            Node*temp=head;
            for(int i=0;i<index-1;i++){
                temp=temp->next;
            }
            node->next=temp->next;
            temp->next=node;
        }
        size++;
    }
    
    void deleteAtIndex(int index) {
        if (index < 0 || index >= size) return; 
        if(index==0){
            if(head){
                head=head->next;
            }
            if(head==nullptr){
                tail=head=nullptr;
            }
        }
        else if(index==size-1){
            Node* temp=head;
            while(temp->next->next){
                temp=temp->next;
            }
            delete temp->next;
            temp->next=nullptr;
            tail=temp;
        }
        else{
            Node*temp=head;
            for(int i=0;i<index-1;i++){
                temp=temp->next;
            }
            if(temp->next){
                temp->next=temp->next->next;
            }
        }
        size--;
    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */