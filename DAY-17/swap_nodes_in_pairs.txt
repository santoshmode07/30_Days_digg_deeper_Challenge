/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        int count=0;
        while(head){
            head=head->next;
            count++;
        }
        return count;
    }
    ListNode* swapPairs(ListNode* head) {
        if(!head) return nullptr;
        ListNode*curr=head;
        int len=length(head);
        ListNode*dummy=new ListNode(-1,nullptr);
        ListNode*tempp=dummy;
        while(curr!=nullptr&&len!=1){
            int it=2;
            ListNode*prev=nullptr;
            ListNode*extra=curr;
            while(it--&&curr!=nullptr){
                ListNode*temp=curr->next;
                curr->next=prev;
                prev=curr;
                curr=temp;
            }
            tempp->next=prev;
            tempp=extra;
            len-=2;
        }
        if(len==1){
            tempp->next=curr;
        }
        ListNode*result=dummy->next;
        delete dummy;
        return result;
    }
};