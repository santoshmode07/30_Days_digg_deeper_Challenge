/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        if(root==nullptr) return {};
        vector<int>vec;
        stack<TreeNode*>stk;
        TreeNode* temp=root;
        TreeNode* last;
        while(!stk.empty()||temp!=nullptr){
            if(temp!=nullptr){
                stk.push(temp);
                temp=temp->left;
            }
            else{
                temp=stk.top();
                if(temp->right!=nullptr&&last!=temp->right){
                    temp=temp->right;
                }
                else{
                    vec.push_back(temp->val);
                    last=temp;
                    stk.pop();
                    temp=nullptr;
                }
            }
        }
        return vec;
    }
};